name: Deploy Crypto Prediction App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test imports
      run: |
        python -c "import streamlit; print('âœ… Streamlit imported')"
        python -c "import tensorflow; print('âœ… TensorFlow imported')"
        python -c "from translations import get_text; print('âœ… Translations working')"
        python -c "from data_loader import DataLoader; print('âœ… DataLoader working')"
        python -c "from futures_data_loader import FuturesDataLoader; print('âœ… FuturesDataLoader working')"
        python -c "from predictor import LSTMPredictor; print('âœ… LSTMPredictor working')"
        python -c "from futures_predictor import FuturesLSTMPredictor; print('âœ… FuturesLSTMPredictor working')"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Build Docker image
      run: |
        docker build -t crypto-predictor .
    
    - name: Test Docker image
      run: |
        docker run --rm crypto-predictor python -c "print('âœ… Docker image working')"

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to server
      run: |
        echo "ðŸš€ Ready for deployment!"
        echo "ðŸ“‹ Deployment steps:"
        echo "1. Copy files to server"
        echo "2. Run: ./deploy.sh"
        echo "3. Access at: http://your-server:8501" 